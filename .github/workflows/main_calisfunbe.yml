# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - calisfunbe

on:
  push:
    branches:
      - main
      - create-question
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: Cache dependencies // Cache for npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./Backend
        run: npm install

      - name: Run tests
        working-directory: ./Backend
        run: npm test --if-present

      - name: Build
        working-directory: ./Backend
        run: npm run build --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./Backend

  # deploy-to-azure:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   permissions:
  #     id-token: write
  #     contents: read

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: node-app

  #     - name: Login to Azure
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

  #     - name: "Deploy to Azure Web App"
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: "calisfunbe"
  #         slot-name: "Production"
  #         package: .

  deploy-to-vercel:
    runs-on: ubuntu-latest
    needs: build-and-test
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./Backend

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel Production
        working-directory: ./Backend
        run: vercel deploy --prod --yes --token ${{ secrets.VERCEL_TOKEN }}
