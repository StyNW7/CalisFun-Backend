name: CI/CD for CalisFun Backend

on:
  push:
    branches:
      - main
      - create-question
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Jest Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./Backend
        run: npm install

      - name: Run tests
        working-directory: ./Backend
        run: npm test

  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy to Vercel
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./Backend
        run: npm install

      - name: Build
        working-directory: ./Backend
        run: npm run build --if-present

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy to Vercel
        working-directory: ./Backend
        run: |
          vercel --prod --yes \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --org-id=${{ secrets.VERCEL_ORG_ID }} \
            --project-id=${{ secrets.VERCEL_PROJECT_ID }}
